services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: fastapi_celery_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  backend-debug:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-learning_python_fastapi_celery}-backend-debug-1
    ports:
      - "8060:8060"
      - "5678:5678"  # Debug port
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - rabbitmq
    command: python debug_server.py
    environment:
      - WAIT_FOR_DEBUGGER=false  # Start immediately, debug server available
    networks:
      - default

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/fastapi_celery_db
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: celery -A app.celery_app worker --loglevel=debug

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    volumes:
      - ./backend:/app
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    depends_on:
      - rabbitmq
    command: celery -A app.celery_app flower --port=5555

volumes:
  postgres_data:
  rabbitmq_data: